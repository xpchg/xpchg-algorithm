C(n1,m1)==0 (mod M)

C(n2,m2)==0 (mod M)

C(n3,m3)==0 (mod M)

................

C(nk,mk)==0 (mod M)

小TT希望你告诉他满足条件的最大的M


#include <iostream>
#include <string.h>
#include <math.h>
#include <stdio.h>
#define maxn 100000
#define maxsize 10000
#define LL unsigned __int64
#define inf 1000000000
using namespace std;

int ni,mi;
int cs;
int cnt ;
int isprime[maxsize];
LL ans ;
bool arr[maxsize];
int num[maxsize];
int acnt,mins,t;
bool isok (int x)
{
    for (int i = 0; i < cnt && isprime[i] * isprime[i] <= x; i++)
    if (x % isprime[i] == 0) return 0;
    return 1;
}

void get_prime ()
{
    isprime[0] = 2;
    isprime[1] = 3;
    cnt = 2;
    for (int i = 5; i < maxn; i++)
    if (isok (i)) isprime[cnt++] = i;
}

int divisor (int n,int p)
{
    int count = 0;
    while (n >= p)
    {
        count += n/p;
        n /= p;
    }
    return count;
}

LL pow (LL a,int b) // a^b
{
    LL ans = 1;
    while (b)
    {
        if (b & 1) ans = ans*a;
        a = a*a;
        b/= 2;
    }
    return ans;
}

int span (int n,int m,int p)
{
    return divisor (n,p) - divisor (m,p) - divisor (n-m,p);
}

void out ()
{
    for (int i = 0; i < 10; i++)
    cout << num[i] << " " ;
    cout << endl;
}

int main ()
{
    get_prime ();
    int n;
    while (scanf ("%d",&cs) == 1)
    {
        n = 0;
        bool flay = true;
        memset (arr,false,sizeof (arr));
        memset (num,10000,sizeof (num));
        for (int i = 0; i < cs; i++)
        {
            scanf ("%d %d",&ni,&mi);
            if (ni == mi) flay = false;
            if (!flay) continue;
            n = n > ni ? n : ni;
            for (int j = 0; j < cnt && isprime[j] <= n; j++)
            if (i == 0 || arr[j])
            {
                t = span (ni,mi,isprime[j]);
                if (t == 0) arr[j] = false;
                else
                {
                    if (num[j] > t )
                    {
                        num[j] = t;
                        arr[j] = true;
                    }
                }
            }

        }
       // out ();
        if (flay)
        {
            ans = 1;
            for (int i = 0; i < cnt; i++)
            if (arr[i])
            ans = ans * pow ((LL)isprime[i],num[i]);
            printf ("%I64u\n",ans);
        }
        else printf ("1\n");
    }
    return 0;
}
